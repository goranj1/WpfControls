<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WpfCustomControls">

    <Style x:Key="CustomListBoxItemStyle"
       TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Padding"
          Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
          Value="{Binding HorizontalContentAlignment,
                          RelativeSource={RelativeSource FindAncestor,
                                                         AncestorLevel=1,
                                                         AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
          Value="{Binding VerticalContentAlignment,
                          RelativeSource={RelativeSource FindAncestor,
                                                         AncestorLevel=1,
                                                         AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
          Value="Transparent" />
        <Setter Property="BorderBrush"
          Value="Transparent" />
        <Setter Property="BorderThickness"
          Value="1" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2"
                                     SnapsToDevicePixels="True"
                                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                     StrokeDashArray="1 2"
                                     StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                            Property="Background"
                                            Value="#3D26A0DA" />
                            <Setter TargetName="Bd"
                                        Property="BorderBrush"
                                        Value="#FF26A0DA" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                         Value="True" />
                                <Condition Property="IsSelected"
                         Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="#3D26A0DA" />
                            <Setter TargetName="Bd"
                                        Property="BorderBrush"
                                        Value="#FF26A0DA" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                    Value="False">
                            <Setter TargetName="Bd"
                                        Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AutoCompleteBox}">
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AutoCompleteBox}">
                    <Grid>
                        <StackPanel Orientation="Vertical">
                            <TextBox x:Name="PART_TextBox" Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                        <ProgressBar x:Name="loadingAnimation" BorderThickness="1" IsIndeterminate="True" Height="2"></ProgressBar>
                        <Popup x:Name="PART_Popup" 
                               Width="{TemplateBinding ActualWidth}"
                               PlacementTarget="{Binding ElementName=PART_TextBox}" 
                               Placement="Bottom"  
                               MinHeight="100"
                               PopupAnimation="Fade" 
                               AllowsTransparency="True">

                            <Grid>

                                <Border Margin="2 2 10 10" BorderBrush="Green" BorderThickness="1">
                                    <Grid>
                                        <ListBox x:Name="PART_ListBox" BorderBrush="{x:Null}" Background="Transparent" SelectionMode="Single"
                                             ItemContainerStyle="{StaticResource CustomListBoxItemStyle}"
                                             ItemsSource="{Binding Path=Results, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" 
                                                 ItemTemplate="{TemplateBinding ItemTemplate}"  />
                                        <TextBlock x:Name="emptyResults" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center">No matches found.</TextBlock>
                                     
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy" Value="True">
                            <Setter TargetName="loadingAnimation" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsBusy" Value="False">
                            <Setter TargetName="loadingAnimation" Property="Visibility" Value="Hidden"></Setter>
                        </Trigger>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Results.Count}" Value="0" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsBusy}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="emptyResults" Property="Visibility" Value="Visible"></Setter>
                        </MultiDataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
